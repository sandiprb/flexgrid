@import "_config.pcss";

*{
	box-sizing: border-box;
	&:after,
	&:before{
		box-sizing: border-box;
	}
}

.container-fluid,
.container{
	margin-left: auto;
	margin-right: auto;
	padding-left: calc($grid-gutter / 2);
	padding-right: calc($grid-gutter / 2);
}

@media (min-width: $screen-sm){
	.container{
		width: 750px;
	}
}

@media (min-width: $screen-md){
	.container{
		width: 970px;
	}
}

@media (min-width: $screen-lg){
	.container{
		width: 1170px;
	}
}

/* row */
.fx-row{
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	flex: 1 0 auto;
	margin-left: -calc($grid-gutter / 2);
	margin-right: -calc($grid-gutter / 2);
}

@define-placeholder generic-col-xs{
	padding-left: calc($grid-gutter / 2);
	padding-right: calc($grid-gutter / 2);
	min-height: 1px;
}

/* create xs columns */
@each $val, $i in (12,11,10,9,8,7,6,5,4,3,2,1){
	.fx-col-xs-$(val) {
		flex-basis: calc((calc(12 - $i) * 100) / 12)%;
		width: calc((calc(12 - $i) * 100) / 12)%;
		@extend generic-col-xs;
	}
}
@each $val, $i in (12,11,10,9,8,7,6,5,4,3,2,1){
	.fx-col-xs-offset-$(val) {
		margin-left: calc((calc(12 - $i) * 100) / 12)%;
	}
}

@define-placeholder generic-col{
	flex: 1 0 100%;
	padding-left: calc($grid-gutter / 2);
	padding-right: calc($grid-gutter / 2);
	min-height: 1px;
}


/* mixin to create size based grid columns / offset classes-
*  with respective  media query
*  @param {$media : screen resolution}
*  @param {$col : column name sm/md/lg}
*/
@define-mixin create-col $media, $col {
	@media (min-width: $media){
		@each $val, $i in (12,11,10,9,8,7,6,5,4,3,2,1){
			.fx-col-$(col)-$(val) {
				flex-basis: calc((calc(12 - $i) * 100) / 12)%;
				width: calc((calc(12 - $i) * 100) / 12)%;
			}
		}
		@each $val, $i in (12,11,10,9,8,7,6,5,4,3,2,1){
			.fx-col-$(col)-offset-$(val) {
				margin-left: calc((calc(12 - $i) * 100) / 12)%;
			}
		}
	}
	@for $i from 1 to 12{
		.fx-col-$(col)-$(i) {
			@extend generic-col;
		}
	}
}

/* create columns */
@mixin create-col $screen-sm, sm;
@mixin create-col $screen-md, md;
@mixin create-col $screen-lg, lg;